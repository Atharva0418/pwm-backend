plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.atharvadholakia'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'  // For development only
    implementation 'org.springframework.boot:spring-boot-starter-web'  // Core web functionality
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.2'  // Validation API
    implementation 'jakarta.validation:jakarta.validation-api:3.1.0'  // Jakarta Validation API
    implementation 'org.apache.commons:commons-lang3:3.12.0'  // Commons Lang
    implementation 'org.springframework.boot:spring-boot-starter-logging'  // Logging starter
    implementation 'net.logstash.logback:logstash-logback-encoder:8.0'  // Logstash encoder for Logback
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  // JPA and Hibernate
    runtimeOnly 'com.mysql:mysql-connector-j'  // MySQL connector
    compileOnly 'org.projectlombok:lombok:1.18.30'  // Lombok for code generation
    annotationProcessor 'org.projectlombok:lombok:1.18.30'  // Lombok annotation processing
    testImplementation 'org.hamcrest:hamcrest:2.2'  // Hamcrest for assertions
    testImplementation 'org.springframework.boot:spring-boot-starter-test'  // Testing support
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'  // JUnit launcher
}


tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
    classpath = sourceSets.main.runtimeClasspath + configurations.developmentOnly
	sourceResources sourceSets.main

}
